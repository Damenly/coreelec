diff --git a/xbmc/cores/VideoPlayer/VideoPlayer.cpp b/xbmc/cores/VideoPlayer/VideoPlayer.cpp
index 0530f0fc60..56de7c94fc 100644
--- a/xbmc/cores/VideoPlayer/VideoPlayer.cpp
+++ b/xbmc/cores/VideoPlayer/VideoPlayer.cpp
@@ -937,10 +937,7 @@ void CVideoPlayer::OpenDefaultStreams(bool reset)
     if (OpenStream(m_CurrentSubtitle, stream.demuxerId, stream.id, stream.source))
     {
       valid = true;
-      if(!psp.relevant(stream))
-        visible = false;
-      else if(stream.flags & StreamFlags::FLAG_FORCED)
-        visible = true;
+      visible = true;
       break;
     }
   }
diff --git a/xbmc/video/VideoInfoDownloader.cpp b/xbmc/video/VideoInfoDownloader.cpp
index 8048647d11..a50828ad4a 100644
--- a/xbmc/video/VideoInfoDownloader.cpp
+++ b/xbmc/video/VideoInfoDownloader.cpp
@@ -97,16 +97,38 @@ void CVideoInfoDownloader::Process()
   m_state = DO_NOTHING;
 }
 
+//fix for CMCT style names
+std::string parseMovieTitle(const std::string &title)
+{
+    CLog::Log(LOGDEBUG,"Parsing movie title: %s", title.c_str());
+    size_t start=0;    //the position actual name should start
+    if(title.at(0)=='[') //CMCT style
+    {
+        start=title.find(']');
+        if(start != std::string::npos) //found end
+        {
+            start++;
+            if(title.at(start)=='.')//skip '.'
+                start++;
+        }
+        if(start>=title.size() || start<0) //don't skip if the '[]' includes the whole filename
+            start=0;
+    }    
+    std::string actual=title.substr(start);
+    CLog::Log(LOGDEBUG,"Parsed actual title name: %s", actual.c_str());
+    return actual;
+}
+
 int CVideoInfoDownloader::FindMovie(const std::string &movieTitle, int movieYear,
                                     MOVIELIST& movieList,
                                     CGUIDialogProgress *pProgress /* = NULL */)
 {
   //CLog::Log(LOGDEBUG,"CVideoInfoDownloader::FindMovie(%s)", strMovie.c_str());
 
+  m_movieTitle = parseMovieTitle(movieTitle);
   if (pProgress)
   { // threaded version
     m_state = FIND_MOVIE;
-    m_movieTitle = movieTitle;
     m_movieYear = movieYear;
     m_found = 0;
     if (IsRunning())
